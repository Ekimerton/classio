{"version":3,"sources":["components/ClassCard.js","components/TimetableCalendar.js","components/Timetable.js","utils/timetableGen.js","App.js","reportWebVitals.js","index.js"],"names":["Meta","Card","Text","Typography","Paragraph","ClassCard","props","useState","loading","setLoading","name","setName","timeslotCount","setTimeslotCount","content","style","maxWidth","code","onDelete","onAdd","semester","useEffect","loadInfo","a","axios","get","params","res","data","course_info","console","log","sections","timeslots","_","flatMap","length","size","bordered","title","className","marginRight","height","extra","onClick","description","Title","TimetableCalendar","width","bodyStyle","padding","justify","margin","paddingTop","flex","level","map","timeslot","start_time","end_time","Panel","Collapse","Timetable","timetable","scores","header","color","total","lunch","offTime","justifyContent","alignItems","backgroundColor","showArrow","cartesianProduct","sets","n","result","current","push","forEach","item","weekdays","Step","Steps","Option","Select","App","autocompleteOptions","setAutoCompleteOptions","searchValue","setSearchValue","setSemester","selectedClasses","setSelectedClasses","courseInfos","setCourseInfos","step","setStep","timetables","setTimetables","onAddCourse","courseInfo","newCourseInfos","unshift","loadAutocomplete","course_codes","course_options","course_code","handleDeleteCourse","courseCode","newSelectedClasses","index","indexOf","splice","textAlign","flexDirection","marginBottom","display","defaultValue","onChange","newSemester","handleSelectSemester","value","allowClear","disabled","options","onSelect","includes","message","error","handleSelectCourse","onSearch","filterOption","inputValue","option","toUpperCase","placeholder","marginTop","type","block","courses","course","filter","section","sectionGroups","groupBy","kind","courseSets","Object","values","concat","generateSets","combinations","combination","set","days","day","valid","weekday","sortBy","generateTimetables","scoredTimetables","dinner","generateScores","icon","LoadingOutlined","itemLayout","pagination","page","pageSize","dataSource","renderItem","Item","paddingLeft","paddingRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab3edc04.chunk.js","sourcesContent":["import _ from 'lodash';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Card, Typography, Popover } from 'antd';\nconst { Meta } = Card;\nconst { Text, Paragraph } = Typography;\n\nexport default function ClassCard(props) {\n    const [loading, setLoading] = useState(true);\n    const [name, setName] = useState(\"\");\n    const [timeslotCount, setTimeslotCount] = useState(0);\n\n    const content = (\n        <div style={{ maxWidth: 200 }}>\n            <Text>Some classes are async, and might not have set timeslots.</Text>\n        </div>\n    );\n\n    const { code, onDelete, onAdd, semester } = props;\n\n    useEffect(() => {\n        const loadInfo = async () => {\n            const res = await axios.get(\n                `https://classio-api.herokuapp.com/course/${code}`,\n                { params: { semester: semester } }\n            );\n            setName(res.data.course_info.name);\n            console.log(res.data.course_info.sections);\n            const timeslots = _.flatMap(res.data.course_info.sections, 'timeslots')\n            setTimeslotCount(timeslots.length);\n            onAdd(res.data.course_info);\n            setLoading(false);\n        }\n        setLoading(true);\n        loadInfo();\n    }, [code, semester]);\n\n    return (\n        <Card\n            size=\"small\"\n            bordered={false}\n            title={code}\n            loading={loading}\n            className=\"App-class-card\"\n            style={{ marginRight: 10, height: 120 }}\n            extra={<a onClick={() => onDelete(props.code)}>X</a>}\n        >\n            <Meta\n                title={name}\n                description={\n                    <div>\n                        <Text>{`Found ${timeslotCount} timeslot(s)`}</Text>\n                        {timeslotCount === 0 &&\n                            <Popover content={content} title=\"Why are there no timeslots?\">\n\n                                <a> ? </a>\n                            </Popover>\n                        }\n                    </div>\n                }\n            />\n        </Card >\n    );\n}","import { Typography, Card, Row, Col } from 'antd';\n\nconst { Title } = Typography\n\nexport default function TimetableCalendar(props) {\n    const { timeslots } = props;\n\n    return (\n        <Card\n            style={{ width: '100%' }}\n            bodyStyle={{ padding: 0 }}\n            size=\"small\"\n        >\n            <Row justify=\"center\" style={{ margin: 0, paddingTop: 10 }}>\n                <Col flex={1} >\n                    <Title level={5}>Monday</Title>\n                    {timeslots['Mo'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} >\n                    <Title level={5}>Tuesday</Title>\n                    {timeslots['Tu'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} >\n                    <Title level={5}>Wednesday</Title>\n                    {timeslots['We'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} >\n                    <Title level={5}>Thursday</Title>\n                    {timeslots['Th'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1}>\n                    <Title level={5}>Friday</Title>\n                    {timeslots['Fr'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n            </Row>\n        </Card>\n    );\n}","import { Collapse, Tag } from 'antd';\nimport TimetableCalendar from './TimetableCalendar'\n\nconst { Panel } = Collapse;\n\nexport default function Timetable(props) {\n    const { timetable } = props;\n    const timeslots = timetable.timetable;\n    const scores = timetable.scores;\n\n    return (\n        <Collapse>\n            <Panel\n                header={\n                    <div>\n                        <Tag color=\"green\">Mid-day</Tag>\n                        <Tag color=\"blue\">Score: {scores.total}/10</Tag>\n                        <Tag color=\"blue\">Lunches: {scores.lunch}/5</Tag>\n                        <Tag color=\"blue\">Dinners: {scores.lunch}/5</Tag>\n                        <Tag color=\"blue\">Time wasted: {scores.offTime}h</Tag>\n                    </div>\n                }\n                style={{ padding: 0, margin: 0, justifyContent: \"flex-start\", alignItems: \"flex-start\", backgroundColor: \"#ffffff\" }}\n                key=\"1\"\n                showArrow={false}\n            >\n                <TimetableCalendar timeslots={timeslots} />\n            </Panel>\n        </Collapse >\n    )\n}","import _ from 'lodash';\n\n// Groups sections of the same class and type into a single sets, returns all unique sets generated\nexport const generateSets = (courses) => {\n    var sets = [];\n    for (const course of courses) {\n        const sections = _.filter(course.sections, section => section.timeslots.length > 0);\n        const sectionGroups = _.groupBy(sections, section => section.kind);\n        const courseSets = Object.values(sectionGroups);\n        sets = sets.concat(courseSets);\n    }\n    return sets;\n};\n\n// Returns the cartesian product of the provided sets, i.e. returns all combinations generated by picking one item from each set\nexport const cartesianProduct = (sets, n = 0, result = [], current = []) => {\n    if (n === sets.length) result.push(current)\n    else sets[n].forEach(item => cartesianProduct(sets, n + 1, result, [...current, item]))\n\n    return result\n};\n\nconst validateDay = (day) => {\n    return true;\n}\n\nconst weekdays = ['Mo', 'Tu', 'We', 'Th', 'Fr'];\n// Flattens timeslots and checks for any conflicts\nexport const generateTimetables = (combinations) => {\n    var timetables = [];\n    for (const combination of combinations) {\n        const timeslots = _.flatMap(combination, set => set.timeslots)\n        var days = _.groupBy(timeslots, timeslot => timeslot.day)\n        var valid = true;\n        for (const weekday of weekdays) {\n            days[weekday] = _.sortBy(days[weekday], 'start_time');\n            valid = valid && validateDay(days[weekday]);\n            if (!valid) {\n                break;\n            }\n        }\n        valid && timetables.push(days);\n    }\n    return timetables;\n};\n\n\nexport const generateScores = (timetables) => {\n    return timetables.map((timetable) => {\n        return {\n            scores: { total: 8, lunch: 3, dinner: 4, offTime: 8 },\n            timetable\n        }\n    })\n}","import './App.css';\nimport 'antd/dist/antd.css';\nimport { AutoComplete, Input, Typography, Button, Select, Steps, List, message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ClassCard from './components/ClassCard';\nimport Timetable from './components/Timetable';\nimport { generateSets, cartesianProduct, generateTimetables, generateScores } from './utils/timetableGen';\n\nconst { Paragraph, Text, Title } = Typography;\nconst { Step } = Steps;\nconst { Option } = Select;\n\n\nfunction App() {\n\n\tconst [autocompleteOptions, setAutoCompleteOptions] = useState([]);\n\tconst [searchValue, setSearchValue] = useState(\"\");\n\tconst [semester, setSemester] = useState(\"2021 Fall\");\n\tconst [selectedClasses, setSelectedClasses] = useState([]);\n\tconst [courseInfos, setCourseInfos] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [step, setStep] = useState(-1);\n\tconst [timetables, setTimetables] = useState([]);\n\n\tconst onAddCourse = (courseInfo) => {\n\t\tconst newCourseInfos = [...courseInfos];\n\t\tnewCourseInfos.unshift(courseInfo);\n\t\tsetCourseInfos(newCourseInfos);\n\t}\n\n\tuseEffect(() => {\n\t\tconst loadAutocomplete = async () => {\n\t\t\tconst res = await axios.get(\n\t\t\t\t'https://classio-api.herokuapp.com/course',\n\t\t\t\t{ params: { semester: semester } }\n\t\t\t);\n\t\t\tconst course_codes = res.data.course_codes;\n\t\t\tconst course_options = [];\n\t\t\tcourse_codes.forEach(course_code => {\n\t\t\t\tcourse_options.push({ 'value': course_code })\n\t\t\t})\n\n\t\t\tsetAutoCompleteOptions(course_options)\n\t\t\tsetLoading(false);\n\t\t}\n\t\tsetLoading(true);\n\t\tloadAutocomplete();\n\t}, [semester]);\n\n\tconst handleSelectCourse = (courseCode) => {\n\t\tif (selectedClasses.includes(courseCode)) {\n\t\t\tmessage.error(\"You can't select the same class twice!\");\n\t\t\treturn\n\t\t}\n\t\tconst newSelectedClasses = [...selectedClasses]\n\t\tnewSelectedClasses.unshift(courseCode);\n\t\tsetSelectedClasses(newSelectedClasses);\n\t\tsetSearchValue(\"\");\n\t}\n\n\tconst handleDeleteCourse = (courseCode) => {\n\t\tconst newSelectedClasses = [...selectedClasses];\n\t\tconst newCourseInfos = [...courseInfos];\n\t\tconst index = newSelectedClasses.indexOf(courseCode);\n\t\tnewSelectedClasses.splice(index, 1);\n\t\tnewCourseInfos.splice(index, 1);\n\t\tsetSelectedClasses(newSelectedClasses);\n\t\tsetCourseInfos(newCourseInfos);\n\t}\n\n\n\tconst handleSelectSemester = (newSemester) => {\n\t\tsetStep(-1);\n\t\tsetSemester(newSemester);\n\t\tsetSearchValue(\"\");\n\t\tsetSelectedClasses([]);\n\t\tsetCourseInfos([]);\n\t\tsetTimetables([]);\n\t}\n\n\tconst handleGenerate = () => {\n\t\tsetTimetables([]);\n\t\tsetStep(0);\n\t\tconst sets = generateSets(courseInfos);\n\t\tsetStep(1);\n\t\tconst products = cartesianProduct(sets);\n\t\tconst timetables = generateTimetables(products);\n\t\tsetStep(2);\n\t\tconst scoredTimetables = generateScores(timetables);\n\t\tsetTimetables(scoredTimetables);\n\t\tsetStep(3);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<div style={{ maxWidth: \"100%\", width: 800, padding: 10 }}>\n\t\t\t\t\t<div className=\"App-section\" style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t<Title>classio • Queen's University</Title>\n\t\t\t\t\t\t<Text>A better take on class selection. Put some content here ashasdhalsdha</Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App-section\">\n\t\t\t\t\t\t<div style={{ flex: 1, flexDirection: \"row\", justifyContent: 'space-around', alignItems: 'center', marginBottom: 20, display: \"flex\" }}>\n\t\t\t\t\t\t\t<Select defaultValue=\"2021 Fall\" size=\"large\" style={{ flex: 0.3, marginRight: 10 }} onChange={newSemester => handleSelectSemester(newSemester)}>\n\t\t\t\t\t\t\t\t<Option value=\"2021 Fall\">Fall 2021</Option>\n\t\t\t\t\t\t\t\t<Option value=\"2021 Winter\">Winter 2021</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<AutoComplete\n\t\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\t\t\toptions={autocompleteOptions}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t\t\t\t\tonSelect={(courseCode) => { handleSelectCourse(courseCode) }}\n\t\t\t\t\t\t\t\tonSearch={() => { }}\n\t\t\t\t\t\t\t\tonChange={setSearchValue}\n\t\t\t\t\t\t\t\tfilterOption={(inputValue, option) =>\n\t\t\t\t\t\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input size=\"large\" placeholder={loading ? \"Loading courses...\" : \"Enter course code\"} disabled={loading} />\n\t\t\t\t\t\t\t</AutoComplete>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Paragraph>Selected <b>{courseInfos.length}</b> course(s)</Paragraph>\n\t\t\t\t\t\t<div className=\"App-horizontal-scroll\">\n\t\t\t\t\t\t\t{selectedClasses.map((code) => (\n\t\t\t\t\t\t\t\t<ClassCard key={code} onDelete={handleDeleteCourse} code={code} onAdd={onAddCourse} semester={semester} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button style={{ marginTop: 10 }} type=\"primary\" block size=\"large\" disabled={courseInfos.length === 0} onClick={handleGenerate}>\n\t\t\t\t\t\t\tGenerate Timetables\n    \t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App-section\" style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t<Steps size=\"small\" current={step}>\n\t\t\t\t\t\t\t<Step title=\"Parsing\" icon={step === 0 && <LoadingOutlined />} />\n\t\t\t\t\t\t\t<Step title=\"Generating\" icon={step === 1 && <LoadingOutlined />} />\n\t\t\t\t\t\t\t<Step title=\"Scoring\" icon={step === 2 && <LoadingOutlined />} />\n\t\t\t\t\t\t</Steps>\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\titemLayout=\"vertical\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\t\tonChange: page => {\n\t\t\t\t\t\t\t\t\tconsole.log(page);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tpageSize: 10,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ padding: 0 }}\n\t\t\t\t\t\t\tdataSource={timetables}\n\t\t\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\tstyle={{ paddingLeft: 0, paddingRight: 0 }}\n\t\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Timetable timetable={item} />\n\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}