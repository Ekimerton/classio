{"version":3,"sources":["components/ClassCard.js","components/TimetableCalendar.js","components/Timetable.js","utils/timetableGen.js","App.js","reportWebVitals.js","index.js"],"names":["Meta","Card","Text","Typography","Paragraph","ClassCard","props","useState","loading","setLoading","name","setName","timeslotCount","setTimeslotCount","content","style","maxWidth","code","onDelete","onAdd","semester","useEffect","loadInfo","a","axios","get","params","res","data","course_info","timeslots","_","flatMap","sections","length","size","bordered","title","className","marginRight","height","extra","onClick","description","Title","TimetableCalendar","width","bodyStyle","padding","justify","margin","paddingTop","justifyContent","flex","level","map","timeslot","start_time","end_time","Panel","Collapse","Timetable","timetable","scores","header","color","type","total","offTime","lunch","dinner","alignItems","backgroundColor","showArrow","cartesianProduct","sets","n","result","current","push","forEach","item","weekdays","lunchTime","dinnerTime","validateDay","day","i","prevTime","calculateTimeType","types","Object","values","entries","reduce","b","calculateOfftime","sum","currTime","prevMoment","moment","HTML5_FMT","TIME","currMoment","duration","diff","asHours","checkAvailability","target","mid","left","right","Math","floor","Link","Step","Steps","Option","Select","App","autocompleteOptions","setAutoCompleteOptions","searchValue","setSearchValue","setSemester","selectedClasses","setSelectedClasses","courseInfos","setCourseInfos","step","setStep","timetables","setTimetables","onAddCourse","courseInfo","newCourseInfos","unshift","loadAutocomplete","course_codes","course_options","course_code","handleDeleteCourse","courseCode","newSelectedClasses","index","indexOf","splice","fontSize","textAlign","marginTop","href","ellipsis","rows","expandable","symbol","flexDirection","marginBottom","display","defaultValue","onChange","newSemester","handleSelectSemester","value","allowClear","disabled","options","onSelect","includes","message","error","handleSelectCourse","onSearch","filterOption","inputValue","option","toUpperCase","placeholder","block","courses","course","filter","section","sectionGroups","groupBy","kind","courseSets","concat","generateSets","combinations","combination","set","days","valid","weekday","sortBy","generateTimetables","scoredTimetables","round","generateScores","sortedTimetables","reverse","icon","LoadingOutlined","plain","itemLayout","pagination","page","console","log","pageSize","dataSource","renderItem","Item","paddingLeft","paddingRight","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4e60803.chunk.js","sourcesContent":["import _ from 'lodash';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Card, Typography, Popover } from 'antd';\nconst { Meta } = Card;\nconst { Text, Paragraph } = Typography;\n\nexport default function ClassCard(props) {\n    const [loading, setLoading] = useState(true);\n    const [name, setName] = useState(\"\");\n    const [timeslotCount, setTimeslotCount] = useState(0);\n\n    const content = (\n        <div style={{ maxWidth: 200 }}>\n            <Text>Some classes are async, and might not have set timeslots.</Text>\n        </div>\n    );\n\n    const { code, onDelete, onAdd, semester } = props;\n\n    useEffect(() => {\n        const loadInfo = async () => {\n            const res = await axios.get(\n                `https://classio-api.herokuapp.com/course/${code}`,\n                { params: { semester: semester } }\n            );\n            setName(res.data.course_info.name);\n            const timeslots = _.flatMap(res.data.course_info.sections, 'timeslots')\n            setTimeslotCount(timeslots.length);\n            onAdd(res.data.course_info);\n            setLoading(false);\n        }\n        setLoading(true);\n        loadInfo();\n    }, [code, semester]);\n\n    return (\n        <Card\n            size=\"small\"\n            bordered={false}\n            title={code}\n            loading={loading}\n            className=\"App-class-card\"\n            style={{ marginRight: 10, height: 120 }}\n            extra={<a onClick={() => onDelete(props.code)}>X</a>}\n        >\n            <Meta\n                title={name}\n                description={\n                    <div>\n                        <Text>{`Found ${timeslotCount} timeslot(s)`}</Text>\n                        {timeslotCount === 0 &&\n                            <Popover content={content} title=\"Why are there no timeslots?\">\n\n                                <a> ? </a>\n                            </Popover>\n                        }\n                    </div>\n                }\n            />\n        </Card >\n    );\n}","import { Typography, Card, Row, Col } from 'antd';\n\nconst { Title } = Typography\n\nexport default function TimetableCalendar(props) {\n    const { timeslots } = props;\n\n    return (\n        <Card\n            style={{ width: '100%' }}\n            bodyStyle={{ padding: 0 }}\n            size=\"small\"\n        >\n            <Row justify=\"center\" style={{ margin: 0, paddingTop: 10, justifyContent: \"center\" }}>\n                <Col flex={1} className=\"Timetable-column\">\n                    <Title level={5}>Monday</Title>\n                    {timeslots['Mo'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} className=\"Timetable-column\">\n                    <Title level={5}>Tuesday</Title>\n                    {timeslots['Tu'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} className=\"Timetable-column\">\n                    <Title level={5}>Wednesday</Title>\n                    {timeslots['We'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} className=\"Timetable-column\">\n                    <Title level={5}>Thursday</Title>\n                    {timeslots['Th'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n                <Col flex={1} className=\"Timetable-column\">\n                    <Title level={5}>Friday</Title>\n                    {timeslots['Fr'].map((timeslot) => {\n                        return <p>{`${timeslot.start_time} - ${timeslot.end_time}`}</p>\n                    })}\n                </Col>\n            </Row>\n        </Card>\n    );\n}","import { Collapse, Tag } from 'antd';\nimport TimetableCalendar from './TimetableCalendar'\n\nconst { Panel } = Collapse;\n\nexport default function Timetable(props) {\n    const { timetable } = props;\n    const timeslots = timetable.timetable;\n    const scores = timetable.scores;\n\n    const timeColors = {\n        'Early': 'gold',\n        'Mid-Day': 'green',\n        'Late': 'geekblue'\n    }\n\n    return (\n        <Collapse>\n            <Panel\n                header={\n                    <div>\n                        <Tag color={timeColors[scores.type]} style={{ margin: 5 }}>{scores.type}</Tag>\n                        <Tag color=\"blue\" style={{ margin: 5 }}>Score: {scores.total}/10</Tag>\n                        <Tag color=\"blue\" style={{ margin: 5 }}>Time wasted: {scores.offTime}h</Tag>\n                        <Tag color=\"blue\" style={{ margin: 5 }}>Lunches: {scores.lunch}/5</Tag>\n                        <Tag color=\"blue\" style={{ margin: 5 }}>Dinners: {scores.dinner}/5</Tag>\n                    </div>\n                }\n                style={{ padding: 0, margin: 0, justifyContent: \"flex-start\", alignItems: \"flex-start\", backgroundColor: \"#ffffff\" }}\n                key=\"1\"\n                showArrow={false}\n            >\n                <TimetableCalendar timeslots={timeslots} />\n            </Panel>\n        </Collapse >\n    )\n}","\nimport _ from 'lodash';\nimport moment from 'moment';\n\n// Groups sections of the same class and type into a single sets, returns all unique sets generated\nexport const generateSets = (courses) => {\n    var sets = [];\n    for (const course of courses) {\n        const sections = _.filter(course.sections, section => section.timeslots.length > 0);\n        const sectionGroups = _.groupBy(sections, section => section.kind);\n        const courseSets = Object.values(sectionGroups);\n        sets = sets.concat(courseSets);\n    }\n    return sets;\n};\n\n// Returns the cartesian product of the provided sets, i.e. returns all combinations generated by picking one item from each set\nexport const cartesianProduct = (sets, n = 0, result = [], current = []) => {\n    if (n === sets.length) result.push(current)\n    else sets[n].forEach(item => cartesianProduct(sets, n + 1, result, [...current, item]))\n\n    return result\n};\n\n\nconst weekdays = ['Mo', 'Tu', 'We', 'Th', 'Fr'];\n// Flattens timeslots and checks for any conflicts\nexport const generateTimetables = (combinations) => {\n    var timetables = [];\n    for (const combination of combinations) {\n        const timeslots = _.flatMap(combination, set => set.timeslots)\n        var days = _.groupBy(timeslots, timeslot => timeslot.day)\n        var valid = true;\n        for (const weekday of weekdays) {\n            days[weekday] = _.sortBy(days[weekday], 'start_time');\n            valid = valid && validateDay(days[weekday]);\n            if (!valid) { break; };\n        }\n        if (valid) { timetables.push(days); };\n    }\n    return timetables;\n};\n\nconst lunchTime = { start_time: \"11:30\", end_time: \"12:30\" };\nconst dinnerTime = { start_time: \"18:30\", end_time: \"19:30\" };\nexport const generateScores = (timetables) => {\n    return timetables.map((timetable) => {\n        const scores = { total: 0, lunch: 0, dinner: 0, offTime: 0, type: \"late\" }\n        for (const day of Object.values(timetable)) {\n            scores['offTime'] += calculateOfftime(day);\n            scores['lunch'] += checkAvailability(day, lunchTime) ? 1 : 0;\n            scores['dinner'] += checkAvailability(day, dinnerTime) ? 1 : 0;\n        }\n        scores['type'] = calculateTimeType(timetable);\n        scores['total'] = 10 - (5 - scores['lunch']) - (5 - scores['dinner']) - Math.round(scores['offTime'])\n        return {\n            scores,\n            timetable\n        }\n    })\n}\n\nconst validateDay = (day) => {\n    if (day.length === 0 || day.length === 1) {\n        return true;\n    }\n    for (var i = 1; i < day.length; i++) {\n        const prevTime = day[i - 1];\n        const currTime = day[i];\n        if (currTime.start_time < prevTime.end_time) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconst calculateTimeType = (timetable) => {\n    const types = { 'Early': 0, 'Mid-Day': 0, 'Late': 0 };\n    for (const day of Object.values(timetable)) {\n        for (const timeslot of day) {\n            if (timeslot.start_time < \"10:30\") {\n                types['Early']++;\n            } else if (timeslot.start_time < \"3:30\") {\n                types['Mid-Day']++;\n            } else {\n                types['Late']++;\n            }\n        }\n    }\n    const max = Object.entries(types).reduce((a, b) => a[1] > b[1] ? a : b)[0];\n    return max;\n}\n\nconst calculateOfftime = (day) => {\n    if (day.length === 0 || day.length === 1) {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 1; i < day.length; i++) {\n        const prevTime = day[i - 1];\n        const currTime = day[i];\n        const prevMoment = moment(prevTime.end_time, moment.HTML5_FMT.TIME);\n        const currMoment = moment(currTime.start_time, moment.HTML5_FMT.TIME);\n        const duration = moment.duration(currMoment.diff(prevMoment));\n        const hours = duration.asHours();\n        sum += hours;\n    }\n    return sum;\n}\n\nconst checkAvailability = (day, target) => {\n    if (day.length === 0) {\n        return true;\n    }\n\n    if (day.length === 1) {\n        return !(target.end_time > day[0].start_time && day[0].end_time > target.start_time)\n    }\n\n    var left = 0;\n    var right = day.length - 1;\n    var mid;\n    while (true) {\n        mid = Math.floor((right + left) / 2);\n        if (day[mid].end_time === target.start_time) {\n            mid++;\n            break;\n        }\n        if (day[mid].end_time > target.start_time) {\n            right = mid - 1;\n            if (left > right) {\n                break;\n            }\n        } else {\n            left = mid + 1;\n            if (left > right) {\n                mid++;\n                break;\n            }\n        }\n    }\n\n    if (mid === day.length) { return true };\n    return target.end_time <= day[mid].start_time\n}","import './App.css';\nimport 'antd/dist/antd.css';\nimport { AutoComplete, Input, Typography, Button, Select, Steps, List, Divider, message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ClassCard from './components/ClassCard';\nimport Timetable from './components/Timetable';\nimport _ from 'lodash';\nimport { generateSets, cartesianProduct, generateTimetables, generateScores } from './utils/timetableGen';\n\nconst { Paragraph, Text, Title, Link } = Typography;\nconst { Step } = Steps;\nconst { Option } = Select;\n\n\nfunction App() {\n\n\tconst [autocompleteOptions, setAutoCompleteOptions] = useState([]);\n\tconst [searchValue, setSearchValue] = useState(\"\");\n\tconst [semester, setSemester] = useState(\"2021 Fall\");\n\tconst [selectedClasses, setSelectedClasses] = useState([]);\n\tconst [courseInfos, setCourseInfos] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [step, setStep] = useState(-1);\n\tconst [timetables, setTimetables] = useState([]);\n\n\tconst onAddCourse = (courseInfo) => {\n\t\tconst newCourseInfos = [...courseInfos];\n\t\tnewCourseInfos.unshift(courseInfo);\n\t\tsetCourseInfos(newCourseInfos);\n\t}\n\n\tuseEffect(() => {\n\t\tconst loadAutocomplete = async () => {\n\t\t\tconst res = await axios.get(\n\t\t\t\t'https://classio-api.herokuapp.com/course',\n\t\t\t\t{ params: { semester: semester } }\n\t\t\t);\n\t\t\tconst course_codes = res.data.course_codes;\n\t\t\tconst course_options = [];\n\t\t\tcourse_codes.forEach(course_code => {\n\t\t\t\tcourse_options.push({ 'value': course_code })\n\t\t\t})\n\n\t\t\tsetAutoCompleteOptions(course_options)\n\t\t\tsetLoading(false);\n\t\t}\n\t\tsetLoading(true);\n\t\tloadAutocomplete();\n\t}, [semester]);\n\n\tconst handleSelectCourse = (courseCode) => {\n\t\tif (selectedClasses.includes(courseCode)) {\n\t\t\tmessage.error(\"You can't select the same class twice!\");\n\t\t\treturn\n\t\t}\n\t\tconst newSelectedClasses = [...selectedClasses]\n\t\tnewSelectedClasses.unshift(courseCode);\n\t\tsetSelectedClasses(newSelectedClasses);\n\t\tsetSearchValue(\"\");\n\t}\n\n\tconst handleDeleteCourse = (courseCode) => {\n\t\tconst newSelectedClasses = [...selectedClasses];\n\t\tconst newCourseInfos = [...courseInfos];\n\t\tconst index = newSelectedClasses.indexOf(courseCode);\n\t\tnewSelectedClasses.splice(index, 1);\n\t\tnewCourseInfos.splice(index, 1);\n\t\tsetSelectedClasses(newSelectedClasses);\n\t\tsetCourseInfos(newCourseInfos);\n\t}\n\n\n\tconst handleSelectSemester = (newSemester) => {\n\t\tsetStep(-1);\n\t\tsetSemester(newSemester);\n\t\tsetSearchValue(\"\");\n\t\tsetSelectedClasses([]);\n\t\tsetCourseInfos([]);\n\t\tsetTimetables([]);\n\t}\n\n\tconst handleGenerate = () => {\n\t\tsetTimetables([]);\n\t\tsetStep(0);\n\t\tconst sets = generateSets(courseInfos);\n\t\tsetStep(1);\n\t\tconst products = cartesianProduct(sets);\n\t\tconst timetables = generateTimetables(products);\n\t\tsetStep(2);\n\t\tconst scoredTimetables = generateScores(timetables);\n\t\tconst sortedTimetables = _.sortBy(scoredTimetables, timetable => timetable.scores.total).reverse()\n\t\tsetTimetables(sortedTimetables);\n\t\tsetStep(3);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<div style={{ maxWidth: \"100%\", width: 800, padding: 10 }}>\n\t\t\t\t\t<div className=\"App-section\" style={{ fontSize: 14 }}>\n\t\t\t\t\t\t<Title style={{ textAlign: 'center' }}>classio</Title>\n\t\t\t\t\t\t<Paragraph style={{ textAlign: 'center', marginTop: -10 }}>\n\t\t\t\t\t\t\tFound a bug? Have a suggestion?\n\t\t\t\t\t\t\t<Link href=\"https://docs.google.com/forms/d/1FNYSnC7lkeZQt-3fw_PotWnGe5q40A5vKZaJDMRs5b4/edit\" target=\"_blank\"> Let me know!</Link>\n\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\tclassio is an app that helps with course selection. Once\n\t\t\t\t\t\t\tyou enter which classes you are taking, it automatically\n\t\t\t\t\t\t\tcreates all possible timetables, eliminates any with\n\t\t\t\t\t\t\tconflicts, and ranks them for convenience.\n\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t<Paragraph >\n\t\t\t\t\t\t\tAll of the course information used within this project comes from my <Link href=\"https://classio-api.herokuapp.com\" target=\"_blank\">open-source api</Link>. If you have a keen eye for code, or are looking to get into coding, I would recommend giving it a shot in your next project!\n\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Paragraph ellipsis={{ rows: 2, expandable: true, symbol: 'more' }}>\n\t\t\t\t\t\t\tThanks for using my app! I created classio in 2019 because I was frustrated with the overly-tedious course selection process. Since then, I've gotten a lot of requests to update it for future semesters. I had originally planned to update classio for 2020. However, the original was mostly spaghetti code that was slow and very hard to read. Plus, most courses in 2020 ended up being online, which meant their timeslots were fungible. For 2021, as we slowly go back to physical learning, I hope classio can be of use to you. Good luck in the upcoming semester!\n\t\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t\tBest wishes,\n\t\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t\tEkim <Link href=\"https://www.linkedin.com/in/ekim-karabey/\" target=\"_blank\">(LinkedIn)</Link>\n\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App-section\">\n\t\t\t\t\t\t<div style={{ flex: 1, flexDirection: \"row\", justifyContent: 'space-around', alignItems: 'center', marginBottom: 20, display: \"flex\" }}>\n\t\t\t\t\t\t\t<Select defaultValue=\"2021 Fall\" size=\"large\" style={{ flex: 0.3, marginRight: 10 }} onChange={newSemester => handleSelectSemester(newSemester)}>\n\t\t\t\t\t\t\t\t<Option value=\"2021 Fall\">Fall 2021</Option>\n\t\t\t\t\t\t\t\t<Option value=\"2021 Winter\">Winter 2021</Option>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<AutoComplete\n\t\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\t\t\toptions={autocompleteOptions}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t\t\t\t\tonSelect={(courseCode) => { handleSelectCourse(courseCode) }}\n\t\t\t\t\t\t\t\tonSearch={() => { }}\n\t\t\t\t\t\t\t\tonChange={setSearchValue}\n\t\t\t\t\t\t\t\tfilterOption={(inputValue, option) =>\n\t\t\t\t\t\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input size=\"large\" placeholder={loading ? \"Loading courses...\" : \"Enter course code\"} disabled={loading} />\n\t\t\t\t\t\t\t</AutoComplete>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Paragraph>Selected <b>{courseInfos.length}</b> course(s)</Paragraph>\n\t\t\t\t\t\t<div className=\"App-horizontal-scroll\">\n\t\t\t\t\t\t\t{selectedClasses.map((code) => (\n\t\t\t\t\t\t\t\t<ClassCard key={code} onDelete={handleDeleteCourse} code={code} onAdd={onAddCourse} semester={semester} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button style={{ marginTop: 10 }} type=\"primary\" block size=\"large\" disabled={courseInfos.length === 0} onClick={handleGenerate}>\n\t\t\t\t\t\t\tGenerate Timetables\n    \t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"App-section\" style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t<Steps size=\"small\" current={step}>\n\t\t\t\t\t\t\t<Step title=\"Parsing\" icon={step === 0 && <LoadingOutlined />} />\n\t\t\t\t\t\t\t<Step title=\"Generating\" icon={step === 1 && <LoadingOutlined />} />\n\t\t\t\t\t\t\t<Step title=\"Scoring\" icon={step === 2 && <LoadingOutlined />} />\n\t\t\t\t\t\t</Steps>\n\t\t\t\t\t\t<Divider plain>Showing {timetables.length} option(s)</Divider>\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\titemLayout=\"vertical\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\t\tonChange: page => {\n\t\t\t\t\t\t\t\t\tconsole.log(page);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tpageSize: 10,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ padding: 0 }}\n\t\t\t\t\t\t\tdataSource={timetables}\n\t\t\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\tkey={Math.floor(Math.random() * 10000)}\n\t\t\t\t\t\t\t\t\tstyle={{ paddingLeft: 0, paddingRight: 0 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Timetable timetable={item} />\n\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}